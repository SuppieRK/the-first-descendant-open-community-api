plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.4.2"
    id("io.micronaut.aot") version "4.4.0"

    id("com.diffplug.spotless") version "6.25.0"
}

group = "io.github.suppie"
version = "0.0.1-SNAPSHOT"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")

    implementation("io.micrometer:context-propagation")
    implementation("io.micronaut.serde:micronaut-serde-jackson")

    implementation("com.googlecode.cqengine:cqengine:3.6.0") {
        exclude group: 'org.xerial', module: 'sqlite-jdbc'
    }

    compileOnly("io.micronaut:micronaut-http-client")
    compileOnly("io.micronaut.openapi:micronaut-openapi-annotations")

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.yaml:snakeyaml")

    testImplementation("io.micronaut:micronaut-http-client")
}


application {
    mainClass = "io.github.suppie.Application"
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")

    compileJava.options.encoding = 'UTF-8'
}

// Enable Spotless code formatting rules
spotless {
    java {
        googleJavaFormat()
    }

    lineEndings = 'UNIX'
}

graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")

    processing {
        incremental(true)
        annotations("io.github.suppie.*")
    }

    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}

tasks.named("dockerBuild") {
    images = [
            "suppie/the-first-descendant-open-community-api:$project.version",
            "suppie/the-first-descendant-open-community-api:latest"
    ]
}

tasks.named("dockerBuildNative") {
    images = [
            "suppie/the-first-descendant-open-community-api:$project.version",
            "suppie/the-first-descendant-open-community-api:latest"
    ]
}